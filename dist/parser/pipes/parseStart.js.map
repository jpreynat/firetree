{"version":3,"sources":["../../../src/parser/pipes/parseStart.js"],"names":["START_PARSERS","Identifier","Literal","parseStartNode","parseStart","props","children","context","prevExpression","tokenList","start","parsedTokenList","ast","size"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA,MAAMA,aAAa,GAAG,CAACC,mBAAD,EAAaC,gBAAb,CAAtB;AACA,MAAMC,cAAc,GAAG,yBAAcH,aAAd,CAAvB;;AAEA,MAAMI,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA,cAArB;AAAqCC,IAAAA;AAArC,MAAmDJ,KAAzD;;AACA,MAAIG,cAAJ,EAAoB;AAClB,2CACKH,KADL;AAEEC,MAAAA,QAAQ,EAAE,mBAAOE,cAAP,EAAuBF,QAAvB,CAFZ;AAGEI,MAAAA,KAAK,EAAEF;AAHT;AAKD;;AACD,QAAME,KAAK,GAAGP,cAAc,CAACI,OAAD,EAAUE,SAAV,CAA5B;AACA,QAAME,eAAe,GAAG,gCAAkBJ,OAAlB,EAA2B;AAAEK,IAAAA,GAAG,EAAEF;AAAP,GAA3B,CAAxB;AACA,yCACKL,KADL;AAEEC,IAAAA,QAAQ,EAAE,mBAAOI,KAAP,EAAcJ,QAAd,CAFZ;AAGEI,IAAAA,KAHF;AAIED,IAAAA,SAAS,EAAE,kBAAME,eAAe,CAACE,IAAtB,EAA4BJ,SAAS,CAACI,IAAtC,EAA4CJ,SAA5C;AAJb;AAMD,CAjBD;;eAmBeL,U","sourcesContent":["import { append, slice } from 'ramda'\n\nimport generateTokenList from '../../generator/generateTokenList'\nimport Identifier from '../nodes/Identifier'\nimport Literal from '../nodes/Literal'\nimport { parseNextNode } from '../util'\n\nconst START_PARSERS = [Identifier, Literal]\nconst parseStartNode = parseNextNode(START_PARSERS)\n\nconst parseStart = (props) => {\n  const { children, context, prevExpression, tokenList } = props\n  if (prevExpression) {\n    return {\n      ...props,\n      children: append(prevExpression, children),\n      start: prevExpression\n    }\n  }\n  const start = parseStartNode(context, tokenList)\n  const parsedTokenList = generateTokenList(context, { ast: start })\n  return {\n    ...props,\n    children: append(start, children),\n    start,\n    tokenList: slice(parsedTokenList.size, tokenList.size, tokenList)\n  }\n}\n\nexport default parseStart\n"],"file":"parseStart.js"}