{"version":3,"sources":["../../../src/parser/pipes/expectLetKeyword.js"],"names":["expectLetKeyword","children","rest","nextChild","LetKeyword","is","Error","Keywords","LET"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;;;;;;;;;;;AAEA,MAAMA,gBAAgB,GAAG,UAA2B;AAAA,MAA1B;AAAEC,IAAAA;AAAF,GAA0B;AAAA,MAAXC,IAAW;;AAClD,QAAMC,SAAS,GAAG,iBAAKF,QAAL,CAAlB;;AACA,MAAI,CAACG,oBAAWC,EAAX,CAAcF,SAAd,CAAL,EAA+B;AAC7B,UAAM,IAAIG,KAAJ,CAAW,qBAAoBC,oBAASC,GAAI,oBAAmBL,SAAU,EAAzE,CAAN;AACD;;AACD,yCACKD,IADL;AAEED,IAAAA,QAAQ,EAAE,iBAAKA,QAAL;AAFZ;AAID,CATD;;eAWeD,gB","sourcesContent":["import { head, tail } from 'ramda'\n\nimport { Keywords } from '../../constants'\nimport LetKeyword from '../nodes/LetKeyword'\n\nconst expectLetKeyword = ({ children, ...rest }) => {\n  const nextChild = head(children)\n  if (!LetKeyword.is(nextChild)) {\n    throw new Error(`Expected keyword '${Keywords.LET}'. Instead found ${nextChild}`)\n  }\n  return {\n    ...rest,\n    children: tail(children)\n  }\n}\n\nexport default expectLetKeyword\n"],"file":"expectLetKeyword.js"}