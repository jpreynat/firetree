{"version":3,"sources":["../../../src/parser/pipes/expectServiceKeyword.js"],"names":["expectServiceKeyword","children","rest","nextChild","ServiceKeyword","is","Error","Keywords","SERVICE"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;;;;;;;;;;;AAEA,MAAMA,oBAAoB,GAAG,UAA2B;AAAA,MAA1B;AAAEC,IAAAA;AAAF,GAA0B;AAAA,MAAXC,IAAW;;AACtD,QAAMC,SAAS,GAAG,iBAAKF,QAAL,CAAlB;;AACA,MAAI,CAACG,wBAAeC,EAAf,CAAkBF,SAAlB,CAAL,EAAmC;AACjC,UAAM,IAAIG,KAAJ,CAAW,qBAAoBC,oBAASC,OAAQ,oBAAmBL,SAAU,EAA7E,CAAN;AACD;;AACD,yCACKD,IADL;AAEED,IAAAA,QAAQ,EAAE,iBAAKA,QAAL;AAFZ;AAID,CATD;;eAWeD,oB","sourcesContent":["import { head, tail } from 'ramda'\n\nimport { Keywords } from '../../constants'\nimport ServiceKeyword from '../nodes/ServiceKeyword'\n\nconst expectServiceKeyword = ({ children, ...rest }) => {\n  const nextChild = head(children)\n  if (!ServiceKeyword.is(nextChild)) {\n    throw new Error(`Expected keyword '${Keywords.SERVICE}'. Instead found ${nextChild}`)\n  }\n  return {\n    ...rest,\n    children: tail(children)\n  }\n}\n\nexport default expectServiceKeyword\n"],"file":"expectServiceKeyword.js"}