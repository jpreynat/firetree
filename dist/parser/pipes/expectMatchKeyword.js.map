{"version":3,"sources":["../../../src/parser/pipes/expectMatchKeyword.js"],"names":["expectMatchKeyword","children","rest","nextChild","MatchKeyword","is","Error","Keywords","MATCH"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;;;;;;;;;;;AAEA,MAAMA,kBAAkB,GAAG,UAA2B;AAAA,MAA1B;AAAEC,IAAAA;AAAF,GAA0B;AAAA,MAAXC,IAAW;;AACpD,QAAMC,SAAS,GAAG,iBAAKF,QAAL,CAAlB;;AACA,MAAI,CAACG,sBAAaC,EAAb,CAAgBF,SAAhB,CAAL,EAAiC;AAC/B,UAAM,IAAIG,KAAJ,CAAW,qBAAoBC,oBAASC,KAAM,oBAAmBL,SAAU,EAA3E,CAAN;AACD;;AACD,yCACKD,IADL;AAEED,IAAAA,QAAQ,EAAE,iBAAKA,QAAL;AAFZ;AAID,CATD;;eAWeD,kB","sourcesContent":["import { head, tail } from 'ramda'\n\nimport { Keywords } from '../../constants'\nimport MatchKeyword from '../nodes/MatchKeyword'\n\nconst expectMatchKeyword = ({ children, ...rest }) => {\n  const nextChild = head(children)\n  if (!MatchKeyword.is(nextChild)) {\n    throw new Error(`Expected keyword '${Keywords.MATCH}'. Instead found ${nextChild}`)\n  }\n  return {\n    ...rest,\n    children: tail(children)\n  }\n}\n\nexport default expectMatchKeyword\n"],"file":"expectMatchKeyword.js"}