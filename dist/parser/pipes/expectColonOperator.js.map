{"version":3,"sources":["../../../src/parser/pipes/expectColonOperator.js"],"names":["expectColonOperator","children","rest","nextChild","ColonOperator","is","Error","Operators","COLON"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;;;;;;;;;;;AAEA,MAAMA,mBAAmB,GAAG,UAA2B;AAAA,MAA1B;AAAEC,IAAAA;AAAF,GAA0B;AAAA,MAAXC,IAAW;;AACrD,QAAMC,SAAS,GAAG,iBAAKF,QAAL,CAAlB;;AACA,MAAI,CAACG,uBAAcC,EAAd,CAAiBF,SAAjB,CAAL,EAAkC;AAChC,UAAM,IAAIG,KAAJ,CAAW,sBAAqBC,qBAAUC,KAAM,oBAAmBL,SAAU,EAA7E,CAAN;AACD;;AACD,yCACKD,IADL;AAEED,IAAAA,QAAQ,EAAE,iBAAKA,QAAL;AAFZ;AAID,CATD;;eAWeD,mB","sourcesContent":["import { head, tail } from 'ramda'\n\nimport { Operators } from '../../constants'\nimport ColonOperator from '../nodes/ColonOperator'\n\nconst expectColonOperator = ({ children, ...rest }) => {\n  const nextChild = head(children)\n  if (!ColonOperator.is(nextChild)) {\n    throw new Error(`Expected operator '${Operators.COLON}'. Instead found ${nextChild}`)\n  }\n  return {\n    ...rest,\n    children: tail(children)\n  }\n}\n\nexport default expectColonOperator\n"],"file":"expectColonOperator.js"}