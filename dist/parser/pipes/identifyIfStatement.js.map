{"version":3,"sources":["../../../src/parser/pipes/identifyIfStatement.js"],"names":["identifyIfStatement","children","context","rest","nextChild","statement","IfStatement","identify"],"mappings":";;;;;;;AAAA;;AAEA;;;;;;;;;;;;;;AAEA,MAAMA,mBAAmB,GAAG,UAAoC;AAAA,MAAnC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAmC;AAAA,MAAXC,IAAW;;AAC9D,QAAMC,SAAS,GAAG,iBAAKH,QAAL,CAAlB;;AACA,QAAMI,SAAS,GAAGC,qBAAYC,QAAZ,CAAqBL,OAArB,EAA8BE,SAA9B,CAAlB;;AACAH,EAAAA,QAAQ,GAAG,iBAAKA,QAAL,CAAX;AACA,yCACKE,IADL;AAEEF,IAAAA,QAFF;AAGEC,IAAAA,OAHF;AAIEG,IAAAA;AAJF;AAMD,CAVD;;eAYeL,mB","sourcesContent":["import { head, tail } from 'ramda'\n\nimport IfStatement from '../nodes/IfStatement'\n\nconst identifyIfStatement = ({ children, context, ...rest }) => {\n  const nextChild = head(children)\n  const statement = IfStatement.identify(context, nextChild)\n  children = tail(children)\n  return {\n    ...rest,\n    children,\n    context,\n    statement\n  }\n}\n\nexport default identifyIfStatement\n"],"file":"identifyIfStatement.js"}