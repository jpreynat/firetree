{"version":3,"sources":["../../../src/parser/pipes/identifyLeftIdentifier.js"],"names":["LEFT_IDENTIFIER_IDENTIFIERS","Expression","Identifier","identifyLeftIdentifierNode","identifyLeftIdentifier","children","context","rest","nextChild","left"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AACA;;;;;;;;;;;;;;AAEA,MAAMA,2BAA2B,GAAG,CAACC,mBAAD,EAAaC,mBAAb,CAApC;AACA,MAAMC,0BAA0B,GAAG,4BAAiBH,2BAAjB,CAAnC;;AAEA,MAAMI,sBAAsB,GAAG,UAAoC;AAAA,MAAnC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAmC;AAAA,MAAXC,IAAW;;AACjE,QAAMC,SAAS,GAAG,iBAAKH,QAAL,CAAlB;AACA,QAAMI,IAAI,GAAGN,0BAA0B,CAACG,OAAD,EAAUE,SAAV,CAAvC;AACAH,EAAAA,QAAQ,GAAG,iBAAKA,QAAL,CAAX;AACA,yCAAYE,IAAZ;AAAkBF,IAAAA,QAAlB;AAA4BC,IAAAA,OAA5B;AAAqCG,IAAAA;AAArC;AACD,CALD;;eAOeL,sB","sourcesContent":["import { head, tail } from 'ramda'\n\nimport Expression from '../nodes/Expression'\nimport Identifier from '../nodes/Identifier'\nimport { identifyNextNode } from '../util'\n\nconst LEFT_IDENTIFIER_IDENTIFIERS = [Expression, Identifier]\nconst identifyLeftIdentifierNode = identifyNextNode(LEFT_IDENTIFIER_IDENTIFIERS)\n\nconst identifyLeftIdentifier = ({ children, context, ...rest }) => {\n  const nextChild = head(children)\n  const left = identifyLeftIdentifierNode(context, nextChild)\n  children = tail(children)\n  return { ...rest, children, context, left }\n}\n\nexport default identifyLeftIdentifier\n"],"file":"identifyLeftIdentifier.js"}