{"version":3,"sources":["../../../src/parser/pipes/parsePermission.js"],"names":["PERMISSION_NAMES","create","delete","get","list","read","update","write","isPermissionName","name","parsePermission","props","identifier","rest","context","tokenList","lastLineCharacterCount","lineCount","Error","permissionName","value","permission"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEA;;;;;;;;;;;;;;AAEA;AACA,MAAMA,gBAAgB,GAAG;AACvBC,EAAAA,MAAM,EAAE,QADe;AAEvBC,EAAAA,MAAM,EAAE,QAFe;AAGvBC,EAAAA,GAAG,EAAE,KAHkB;AAIvBC,EAAAA,IAAI,EAAE,MAJiB;AAKvBC,EAAAA,IAAI,EAAE,MALiB;AAMvBC,EAAAA,MAAM,EAAE,QANe;AAOvBC,EAAAA,KAAK,EAAE;AAPgB,CAAzB;;AAUA,MAAMC,gBAAgB,GAAIC,IAAD,IAAU,CAAC,CAACT,gBAAgB,CAACS,IAAD,CAArD;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,2BAAgC,+BAAgBA,KAAhB,CAAhC;AAAA,QAAM;AAAEC,IAAAA;AAAF,GAAN;AAAA,QAAuBC,IAAvB;;AACA,MAAI,CAACL,gBAAgB,CAACI,UAAU,CAACH,IAAZ,CAArB,EAAwC;AACtC,UAAM;AAAEK,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAyBJ,KAA/B;AACA,UAAM;AAAEK,MAAAA,sBAAF;AAA0BC,MAAAA;AAA1B,QAAwC,gCAAqBH,OAArB,EAA8BC,SAA9B,CAA9C;AACA,UAAM,IAAIG,KAAJ,CACH,oCAAmC,iBAClC,GADkC,EAElC,gBAAKC,cAAD,IAAqB,IAAGA,cAAe,GAA3C,EAA+C,mBAAOnB,gBAAP,CAA/C,CAFkC,CAGlC,yBAAwBe,SAAS,CAACZ,GAAV,CAAc,CAAd,EAAiBiB,KAAM,QAAOH,SAAU,IAAGD,sBAAuB,EAJxF,CAAN;AAMD;;AAED,yCACKH,IADL;AAEEQ,IAAAA,UAAU,EAAET;AAFd;AAID,CAjBD;;eAmBeF,e","sourcesContent":["import { join, map, values } from 'ramda'\n\nimport { getTokenListPosition } from '../util'\n\nimport parseIdentifier from './parseIdentifier'\n\n// https://firebase.google.com/docs/reference/rules/rules#firestore\nconst PERMISSION_NAMES = {\n  create: 'create',\n  delete: 'delete',\n  get: 'get',\n  list: 'list',\n  read: 'read',\n  update: 'update',\n  write: 'write'\n}\n\nconst isPermissionName = (name) => !!PERMISSION_NAMES[name]\n\nconst parsePermission = (props) => {\n  const { identifier, ...rest } = parseIdentifier(props)\n  if (!isPermissionName(identifier.name)) {\n    const { context, tokenList } = props\n    const { lastLineCharacterCount, lineCount } = getTokenListPosition(context, tokenList)\n    throw new Error(\n      `Expected permission name (one of ${join(\n        ',',\n        map((permissionName) => `'${permissionName}'`, values(PERMISSION_NAMES))\n      )}). Instead was given '${tokenList.get(0).value}' at ${lineCount}:${lastLineCharacterCount}`\n    )\n  }\n\n  return {\n    ...rest,\n    permission: identifier\n  }\n}\n\nexport default parsePermission\n"],"file":"parsePermission.js"}