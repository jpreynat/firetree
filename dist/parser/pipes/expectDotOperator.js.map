{"version":3,"sources":["../../../src/parser/pipes/expectDotOperator.js"],"names":["expectDotOperator","children","rest","nextChild","DotOperator","is","Error","Operators","DOT"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;;;;;;;;;;;AAEA,MAAMA,iBAAiB,GAAG,UAA2B;AAAA,MAA1B;AAAEC,IAAAA;AAAF,GAA0B;AAAA,MAAXC,IAAW;;AACnD,QAAMC,SAAS,GAAG,iBAAKF,QAAL,CAAlB;;AACA,MAAI,CAACG,qBAAYC,EAAZ,CAAeF,SAAf,CAAL,EAAgC;AAC9B,UAAM,IAAIG,KAAJ,CAAW,sBAAqBC,qBAAUC,GAAI,oBAAmBL,SAAU,EAA3E,CAAN;AACD;;AACD,yCACKD,IADL;AAEED,IAAAA,QAAQ,EAAE,iBAAKA,QAAL;AAFZ;AAID,CATD;;eAWeD,iB","sourcesContent":["import { head, tail } from 'ramda'\n\nimport { Operators } from '../../constants'\nimport DotOperator from '../nodes/DotOperator'\n\nconst expectDotOperator = ({ children, ...rest }) => {\n  const nextChild = head(children)\n  if (!DotOperator.is(nextChild)) {\n    throw new Error(`Expected operator '${Operators.DOT}'. Instead found ${nextChild}`)\n  }\n  return {\n    ...rest,\n    children: tail(children)\n  }\n}\n\nexport default expectDotOperator\n"],"file":"expectDotOperator.js"}