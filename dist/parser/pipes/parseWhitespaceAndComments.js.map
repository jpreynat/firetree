{"version":3,"sources":["../../../src/parser/pipes/parseWhitespaceAndComments.js"],"names":["parseWhitespaceAndComments","children","context","tokenList","rest","stop","size","nextToken","get","type","NodeTypes","WHITESPACE","Whitespace","parse","COMMENT","Comment"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AACA;;;;;;;;;;;;;;AAEA,MAAMA,0BAA0B,GAAG,UAA+C;AAAA,MAA9C;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA;AAArB,GAA8C;AAAA,MAAXC,IAAW;;AAChF,MAAIC,IAAI,GAAG,KAAX;;AACA,SAAOF,SAAS,CAACG,IAAV,GAAiB,CAAjB,IAAsB,CAACD,IAA9B,EAAoC;AAClC,UAAME,SAAS,GAAGJ,SAAS,CAACK,GAAV,CAAc,CAAd,CAAlB;;AACA,QAAID,SAAS,CAACE,IAAV,KAAmBC,qBAAUC,UAAjC,EAA6C;AAC3CV,MAAAA,QAAQ,GAAG,mBAAOW,oBAAWC,KAAX,CAAiBX,OAAjB,EAA0BC,SAA1B,CAAP,EAA6CF,QAA7C,CAAX;AACAE,MAAAA,SAAS,GAAG,iBAAKA,SAAL,CAAZ;AACD,KAHD,MAGO,IAAII,SAAS,CAACE,IAAV,KAAmBC,qBAAUI,OAAjC,EAA0C;AAC/Cb,MAAAA,QAAQ,GAAG,mBAAOc,iBAAQF,KAAR,CAAcX,OAAd,EAAuBC,SAAvB,CAAP,EAA0CF,QAA1C,CAAX;AACAE,MAAAA,SAAS,GAAG,iBAAKA,SAAL,CAAZ;AACD,KAHM,MAGA;AACLE,MAAAA,IAAI,GAAG,IAAP;AACD;AACF;;AAED;AAASJ,IAAAA,QAAT;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA;AAA5B,KAA0CC,IAA1C;AACD,CAhBD;;eAkBeJ,0B","sourcesContent":["import { append, tail } from 'ramda'\n\nimport { NodeTypes } from '../../constants'\nimport Comment from '../nodes/Comment'\nimport Whitespace from '../nodes/Whitespace'\n\nconst parseWhitespaceAndComments = ({ children, context, tokenList, ...rest }) => {\n  let stop = false\n  while (tokenList.size > 0 && !stop) {\n    const nextToken = tokenList.get(0)\n    if (nextToken.type === NodeTypes.WHITESPACE) {\n      children = append(Whitespace.parse(context, tokenList), children)\n      tokenList = tail(tokenList)\n    } else if (nextToken.type === NodeTypes.COMMENT) {\n      children = append(Comment.parse(context, tokenList), children)\n      tokenList = tail(tokenList)\n    } else {\n      stop = true\n    }\n  }\n\n  return { children, context, tokenList, ...rest }\n}\n\nexport default parseWhitespaceAndComments\n"],"file":"parseWhitespaceAndComments.js"}