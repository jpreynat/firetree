{"version":3,"sources":["../../../src/parser/pipes/parseConsequent.js"],"names":["parseConsequent","parseExpression","expression","rest","consequent"],"mappings":";;;;;;;AAAA;;AAEA;;;;;;;;;;;;;;AAEA,MAAMA,eAAe,GAAG,iBAAKC,wBAAL,EAAsB;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,MAAkBC,IAAlB;;AAAA,yCACzCA,IADyC;AAE5CC,IAAAA,UAAU,EAAEF;AAFgC;AAAA,CAAtB,CAAxB;eAKeF,e","sourcesContent":["import { pipe } from 'ramda'\n\nimport parseExpression from './parseExpression'\n\nconst parseConsequent = pipe(parseExpression, ({ expression, ...rest }) => ({\n  ...rest,\n  consequent: expression\n}))\n\nexport default parseConsequent\n"],"file":"parseConsequent.js"}