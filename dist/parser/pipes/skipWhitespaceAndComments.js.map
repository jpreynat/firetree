{"version":3,"sources":["../../../src/parser/pipes/skipWhitespaceAndComments.js"],"names":["skipWhitespaceAndComments","children","rest","stop","nextChild","Whitespace","is","Comment"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;;;;;;;;;;;AAEA,MAAMA,yBAAyB,GAAG,UAA2B;AAAA,MAA1B;AAAEC,IAAAA;AAAF,GAA0B;AAAA,MAAXC,IAAW;;AAC3D,MAAIC,IAAI,GAAG,KAAX;;AACA,SAAO,mBAAOF,QAAP,IAAmB,CAAnB,IAAwB,CAACE,IAAhC,EAAsC;AACpC,UAAMC,SAAS,GAAGH,QAAQ,CAAC,CAAD,CAA1B;;AACA,QAAII,oBAAWC,EAAX,CAAcF,SAAd,KAA4BG,iBAAQD,EAAR,CAAWF,SAAX,CAAhC,EAAuD;AACrDH,MAAAA,QAAQ,GAAG,iBAAKA,QAAL,CAAX;AACD,KAFD,MAEO;AACLE,MAAAA,IAAI,GAAG,IAAP;AACD;AACF;;AACD,yCAAYD,IAAZ;AAAkBD,IAAAA;AAAlB;AACD,CAXD;;eAaeD,yB","sourcesContent":["import { length, tail } from 'ramda'\n\nimport Comment from '../nodes/Comment'\nimport Whitespace from '../nodes/Whitespace'\n\nconst skipWhitespaceAndComments = ({ children, ...rest }) => {\n  let stop = false\n  while (length(children) > 0 && !stop) {\n    const nextChild = children[0]\n    if (Whitespace.is(nextChild) || Comment.is(nextChild)) {\n      children = tail(children)\n    } else {\n      stop = true\n    }\n  }\n  return { ...rest, children }\n}\n\nexport default skipWhitespaceAndComments\n"],"file":"skipWhitespaceAndComments.js"}