{"version":3,"sources":["../../../src/parser/pipes/parseAlternate.js"],"names":["parseAlternate","parseExpression","expression","rest","alternate"],"mappings":";;;;;;;AAAA;;AAEA;;;;;;;;;;;;;;AAEA,MAAMA,cAAc,GAAG,iBAAKC,wBAAL,EAAsB;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,MAAkBC,IAAlB;;AAAA,yCACxCA,IADwC;AAE3CC,IAAAA,SAAS,EAAEF;AAFgC;AAAA,CAAtB,CAAvB;eAKeF,c","sourcesContent":["import { pipe } from 'ramda'\n\nimport parseExpression from './parseExpression'\n\nconst parseAlternate = pipe(parseExpression, ({ expression, ...rest }) => ({\n  ...rest,\n  alternate: expression\n}))\n\nexport default parseAlternate\n"],"file":"parseAlternate.js"}