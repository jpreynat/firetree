{"version":3,"sources":["../../../src/parser/pipes/expectIfKeyword.js"],"names":["expectIfKeyword","children","rest","nextChild","IfKeyword","is","Error","Keywords","IF"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;;;;;;;;;;;AAEA,MAAMA,eAAe,GAAG,UAA2B;AAAA,MAA1B;AAAEC,IAAAA;AAAF,GAA0B;AAAA,MAAXC,IAAW;;AACjD,QAAMC,SAAS,GAAG,iBAAKF,QAAL,CAAlB;;AACA,MAAI,CAACG,mBAAUC,EAAV,CAAaF,SAAb,CAAL,EAA8B;AAC5B,UAAM,IAAIG,KAAJ,CAAW,qBAAoBC,oBAASC,EAAG,oBAAmBL,SAAU,EAAxE,CAAN;AACD;;AACD,yCACKD,IADL;AAEED,IAAAA,QAAQ,EAAE,iBAAKA,QAAL;AAFZ;AAID,CATD;;eAWeD,e","sourcesContent":["import { head, tail } from 'ramda'\n\nimport { Keywords } from '../../constants'\nimport IfKeyword from '../nodes/IfKeyword'\n\nconst expectIfKeyword = ({ children, ...rest }) => {\n  const nextChild = head(children)\n  if (!IfKeyword.is(nextChild)) {\n    throw new Error(`Expected keyword '${Keywords.IF}'. Instead found ${nextChild}`)\n  }\n  return {\n    ...rest,\n    children: tail(children)\n  }\n}\n\nexport default expectIfKeyword\n"],"file":"expectIfKeyword.js"}