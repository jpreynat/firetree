{"version":3,"sources":["../../../src/parser/pipes/identifyCallee.js"],"names":["CALLEE_IDENTIFIERS","Expression","Identifier","identifyCalleeNode","identifyCallee","children","context","rest","nextChild","callee"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AACA;;;;;;;;;;;;;;AAEA,MAAMA,kBAAkB,GAAG,CAACC,mBAAD,EAAaC,mBAAb,CAA3B;AACA,MAAMC,kBAAkB,GAAG,4BAAiBH,kBAAjB,CAA3B;;AAEA,MAAMI,cAAc,GAAG,UAAoC;AAAA,MAAnC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAmC;AAAA,MAAXC,IAAW;;AACzD,QAAMC,SAAS,GAAG,iBAAKH,QAAL,CAAlB;AACA,QAAMI,MAAM,GAAGN,kBAAkB,CAACG,OAAD,EAAUE,SAAV,CAAjC;AACAH,EAAAA,QAAQ,GAAG,iBAAKA,QAAL,CAAX;AACA,yCAAYE,IAAZ;AAAkBE,IAAAA,MAAlB;AAA0BJ,IAAAA,QAA1B;AAAoCC,IAAAA;AAApC;AACD,CALD;;eAOeF,c","sourcesContent":["import { head, tail } from 'ramda'\n\nimport Expression from '../nodes/Expression'\nimport Identifier from '../nodes/Identifier'\nimport { identifyNextNode } from '../util'\n\nconst CALLEE_IDENTIFIERS = [Expression, Identifier]\nconst identifyCalleeNode = identifyNextNode(CALLEE_IDENTIFIERS)\n\nconst identifyCallee = ({ children, context, ...rest }) => {\n  const nextChild = head(children)\n  const callee = identifyCalleeNode(context, nextChild)\n  children = tail(children)\n  return { ...rest, callee, children, context }\n}\n\nexport default identifyCallee\n"],"file":"identifyCallee.js"}