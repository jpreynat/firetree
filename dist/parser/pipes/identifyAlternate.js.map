{"version":3,"sources":["../../../src/parser/pipes/identifyAlternate.js"],"names":["identifyAlternate","identifyExpression","expression","rest","alternate"],"mappings":";;;;;;;AAAA;;AAEA;;;;;;;;;;;;;;AAEA,MAAMA,iBAAiB,GAAG,iBAAKC,2BAAL,EAAyB;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,MAAkBC,IAAlB;;AAAA,yCAC9CA,IAD8C;AAEjDC,IAAAA,SAAS,EAAEF;AAFsC;AAAA,CAAzB,CAA1B;eAKeF,iB","sourcesContent":["import { pipe } from 'ramda'\n\nimport identifyExpression from './identifyExpression'\n\nconst identifyAlternate = pipe(identifyExpression, ({ expression, ...rest }) => ({\n  ...rest,\n  alternate: expression\n}))\n\nexport default identifyAlternate\n"],"file":"identifyAlternate.js"}