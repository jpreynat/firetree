{"version":3,"sources":["../../../src/parser/pipes/expectDollarSignOperator.js"],"names":["expectDollarSignOperator","children","rest","nextChild","DollarSignOperator","is","Error","Operators","DOLLAR_SIGN"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;;;;;;;;;;;AAEA,MAAMA,wBAAwB,GAAG,UAA2B;AAAA,MAA1B;AAAEC,IAAAA;AAAF,GAA0B;AAAA,MAAXC,IAAW;;AAC1D,QAAMC,SAAS,GAAG,iBAAKF,QAAL,CAAlB;;AACA,MAAI,CAACG,4BAAmBC,EAAnB,CAAsBF,SAAtB,CAAL,EAAuC;AACrC,UAAM,IAAIG,KAAJ,CAAW,sBAAqBC,qBAAUC,WAAY,oBAAmBL,SAAU,EAAnF,CAAN;AACD;;AACD,yCACKD,IADL;AAEED,IAAAA,QAAQ,EAAE,iBAAKA,QAAL;AAFZ;AAID,CATD;;eAWeD,wB","sourcesContent":["import { head, tail } from 'ramda'\n\nimport { Operators } from '../../constants'\nimport DollarSignOperator from '../nodes/DollarSignOperator'\n\nconst expectDollarSignOperator = ({ children, ...rest }) => {\n  const nextChild = head(children)\n  if (!DollarSignOperator.is(nextChild)) {\n    throw new Error(`Expected operator '${Operators.DOLLAR_SIGN}'. Instead found ${nextChild}`)\n  }\n  return {\n    ...rest,\n    children: tail(children)\n  }\n}\n\nexport default expectDollarSignOperator\n"],"file":"expectDollarSignOperator.js"}