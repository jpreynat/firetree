{"version":3,"sources":["../../../src/parser/pipes/parseProperty.js"],"names":["PROPERTY_PARSERS","Range","Expression","Identifier","Literal","parsePropertyNode","parseProperty","props","children","context","tokenList","property","parsedTokenList","ast","size"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA,MAAMA,gBAAgB,GAAG,CAACC,cAAD,EAAQC,mBAAR,EAAoBC,mBAApB,EAAgCC,gBAAhC,CAAzB;AACA,MAAMC,iBAAiB,GAAG,yBAAcL,gBAAd,CAA1B;;AAEA,MAAMM,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA;AAArB,MAAmCH,KAAzC;AACA,QAAMI,QAAQ,GAAGN,iBAAiB,CAACI,OAAD,EAAUC,SAAV,CAAlC;AACA,QAAME,eAAe,GAAG,gCAAkBH,OAAlB,EAA2B;AAAEI,IAAAA,GAAG,EAAEF;AAAP,GAA3B,CAAxB;AACA,yCACKJ,KADL;AAEEC,IAAAA,QAAQ,EAAE,mBAAOG,QAAP,EAAiBH,QAAjB,CAFZ;AAGEG,IAAAA,QAHF;AAIED,IAAAA,SAAS,EAAE,kBAAME,eAAe,CAACE,IAAtB,EAA4BJ,SAAS,CAACI,IAAtC,EAA4CJ,SAA5C;AAJb;AAMD,CAVD;;eAWeJ,a","sourcesContent":["import { append, slice } from 'ramda'\n\nimport generateTokenList from '../../generator/generateTokenList'\nimport Expression from '../nodes/Expression'\nimport Identifier from '../nodes/Identifier'\nimport Literal from '../nodes/Literal'\nimport Range from '../nodes/Range'\nimport { parseNextNode } from '../util'\n\nconst PROPERTY_PARSERS = [Range, Expression, Identifier, Literal]\nconst parsePropertyNode = parseNextNode(PROPERTY_PARSERS)\n\nconst parseProperty = (props) => {\n  const { children, context, tokenList } = props\n  const property = parsePropertyNode(context, tokenList)\n  const parsedTokenList = generateTokenList(context, { ast: property })\n  return {\n    ...props,\n    children: append(property, children),\n    property,\n    tokenList: slice(parsedTokenList.size, tokenList.size, tokenList)\n  }\n}\nexport default parseProperty\n"],"file":"parseProperty.js"}