{"version":3,"sources":["../../../src/parser/pipes/identifyBlockStatement.js"],"names":["identifyBlockStatement","children","context","rest","nextChild","blockStatement","BlockStatement","identify"],"mappings":";;;;;;;AAAA;;AAEA;;;;;;;;;;;;;;AAEA,MAAMA,sBAAsB,GAAG,UAAoC;AAAA,MAAnC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAmC;AAAA,MAAXC,IAAW;;AACjE,QAAMC,SAAS,GAAG,iBAAKH,QAAL,CAAlB;;AACA,QAAMI,cAAc,GAAGC,wBAAeC,QAAf,CAAwBL,OAAxB,EAAiCE,SAAjC,CAAvB;;AACAH,EAAAA,QAAQ,GAAG,iBAAKA,QAAL,CAAX;AACA,yCACKE,IADL;AAEEE,IAAAA,cAFF;AAGEJ,IAAAA,QAHF;AAIEC,IAAAA;AAJF;AAMD,CAVD;;eAYeF,sB","sourcesContent":["import { head, tail } from 'ramda'\n\nimport BlockStatement from '../nodes/BlockStatement'\n\nconst identifyBlockStatement = ({ children, context, ...rest }) => {\n  const nextChild = head(children)\n  const blockStatement = BlockStatement.identify(context, nextChild)\n  children = tail(children)\n  return {\n    ...rest,\n    blockStatement,\n    children,\n    context\n  }\n}\n\nexport default identifyBlockStatement\n"],"file":"identifyBlockStatement.js"}