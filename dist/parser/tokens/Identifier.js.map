{"version":3,"sources":["../../../src/parser/tokens/Identifier.js"],"names":["REGEX_KEYWORDS","keyword","Keywords","REGEX_IDENTIFIER_TEST","RegExp","REGEX_IDENTIFIER_TOKEN","Identifier","parse","context","data","match","length","type","TokenTypes","IDENTIFIER","value","test"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEA,MAAMA,cAAc,GAAG,iBACrB,GADqB,EAErB,gBAAKC,OAAD,IAAc,GAAEA,OAAQ,mBAA5B,EAAgD,mBAAOC,mBAAP,CAAhD,CAFqB,CAAvB;AAIA,MAAMC,qBAAqB,GAAG,IAAIC,MAAJ,CAAY,OAAMJ,cAAe,yBAAjC,CAA9B;AACA,MAAMK,sBAAsB,GAAG,IAAID,MAAJ,CAAY,OAAMJ,cAAe,yBAAjC,CAA/B;AAEA,MAAMM,UAAU,GAAG;AACjBC,EAAAA,KAAK,EAAE,CAACC,OAAD,EAAUC,IAAV,KAAmB;AACxB,UAAM,CAACC,KAAD,IAAUD,IAAI,CAACC,KAAL,CAAWL,sBAAX,CAAhB;AACA,WAAO;AACLM,MAAAA,MAAM,EAAED,KAAK,CAACC,MADT;AAELC,MAAAA,IAAI,EAAEC,sBAAWC,UAFZ;AAGLC,MAAAA,KAAK,EAAEL;AAHF,KAAP;AAKD,GARgB;AASjBM,EAAAA,IAAI,EAAE,CAACR,OAAD,EAAUC,IAAV,KAAmBN,qBAAqB,CAACa,IAAtB,CAA2BP,IAA3B;AATR,CAAnB;eAYeH,U","sourcesContent":["import { join, map, values } from 'ramda'\n\nimport { Keywords, TokenTypes } from '../../constants'\n\nconst REGEX_KEYWORDS = join(\n  '|',\n  map((keyword) => `${keyword}([^a-zA-Z0-9_]|$)`, values(Keywords))\n)\nconst REGEX_IDENTIFIER_TEST = new RegExp(`^(?!${REGEX_KEYWORDS})[a-zA-Z_][a-zA-Z0-9_]*`)\nconst REGEX_IDENTIFIER_TOKEN = new RegExp(`^(?!${REGEX_KEYWORDS})[a-zA-Z_][a-zA-Z0-9_]*`)\n\nconst Identifier = {\n  parse: (context, data) => {\n    const [match] = data.match(REGEX_IDENTIFIER_TOKEN)\n    return {\n      length: match.length,\n      type: TokenTypes.IDENTIFIER,\n      value: match\n    }\n  },\n  test: (context, data) => REGEX_IDENTIFIER_TEST.test(data)\n}\n\nexport default Identifier\n"],"file":"Identifier.js"}