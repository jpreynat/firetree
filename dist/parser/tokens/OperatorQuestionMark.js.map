{"version":3,"sources":["../../../src/parser/tokens/OperatorQuestionMark.js"],"names":["REGEX_OPERATOR_QUESTION_MARK_TEST","OperatorQuestionMark","parse","length","type","TokenTypes","OPERATOR_QUESTION_MARK","value","Operators","QUESTION_MARK","test","context","data"],"mappings":";;;;;;;AAAA;;AAEA,MAAMA,iCAAiC,GAAG,KAA1C;AAEA,MAAMC,oBAAoB,GAAG;AAC3BC,EAAAA,KAAK,EAAE,OAAO;AACZC,IAAAA,MAAM,EAAE,CADI;AAEZC,IAAAA,IAAI,EAAEC,sBAAWC,sBAFL;AAGZC,IAAAA,KAAK,EAAEC,qBAAUC;AAHL,GAAP,CADoB;AAM3BC,EAAAA,IAAI,EAAE,CAACC,OAAD,EAAUC,IAAV,KAAmBZ,iCAAiC,CAACU,IAAlC,CAAuCE,IAAvC;AANE,CAA7B;eASeX,oB","sourcesContent":["import { Operators, TokenTypes } from '../../constants'\n\nconst REGEX_OPERATOR_QUESTION_MARK_TEST = /^\\?/\n\nconst OperatorQuestionMark = {\n  parse: () => ({\n    length: 1,\n    type: TokenTypes.OPERATOR_QUESTION_MARK,\n    value: Operators.QUESTION_MARK\n  }),\n  test: (context, data) => REGEX_OPERATOR_QUESTION_MARK_TEST.test(data)\n}\n\nexport default OperatorQuestionMark\n"],"file":"OperatorQuestionMark.js"}