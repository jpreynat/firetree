{"version":3,"sources":["../../../src/parser/tokens/OperatorOpenCurlyBrace.js"],"names":["REGEX_OPERATOR_OPEN_CURLY_BRACE_TEST","OperatorOpenCurlyBrace","parse","length","type","TokenTypes","OPERATOR_OPEN_CURLY_BRACE","value","Operators","OPEN_CURLY_BRACE","test","context","data"],"mappings":";;;;;;;AAAA;;AAEA,MAAMA,oCAAoC,GAAG,IAA7C;AAEA,MAAMC,sBAAsB,GAAG;AAC7BC,EAAAA,KAAK,EAAE,OAAO;AACZC,IAAAA,MAAM,EAAE,CADI;AAEZC,IAAAA,IAAI,EAAEC,sBAAWC,yBAFL;AAGZC,IAAAA,KAAK,EAAEC,qBAAUC;AAHL,GAAP,CADsB;AAM7BC,EAAAA,IAAI,EAAE,CAACC,OAAD,EAAUC,IAAV,KAAmBZ,oCAAoC,CAACU,IAArC,CAA0CE,IAA1C;AANI,CAA/B;eASeX,sB","sourcesContent":["import { Operators, TokenTypes } from '../../constants'\n\nconst REGEX_OPERATOR_OPEN_CURLY_BRACE_TEST = /^{/\n\nconst OperatorOpenCurlyBrace = {\n  parse: () => ({\n    length: 1,\n    type: TokenTypes.OPERATOR_OPEN_CURLY_BRACE,\n    value: Operators.OPEN_CURLY_BRACE\n  }),\n  test: (context, data) => REGEX_OPERATOR_OPEN_CURLY_BRACE_TEST.test(data)\n}\n\nexport default OperatorOpenCurlyBrace\n"],"file":"OperatorOpenCurlyBrace.js"}