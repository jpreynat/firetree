{"version":3,"sources":["../../../src/parser/tokens/OperatorSemicolon.js"],"names":["REGEX_OPERATOR_SEMICOLON_TEST","OperatorSemicolon","parse","length","type","TokenTypes","OPERATOR_SEMICOLON","value","Operators","SEMICOLON","test","context","data"],"mappings":";;;;;;;AAAA;;AAEA,MAAMA,6BAA6B,GAAG,IAAtC;AAEA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,KAAK,EAAE,OAAO;AACZC,IAAAA,MAAM,EAAE,CADI;AAEZC,IAAAA,IAAI,EAAEC,sBAAWC,kBAFL;AAGZC,IAAAA,KAAK,EAAEC,qBAAUC;AAHL,GAAP,CADiB;AAMxBC,EAAAA,IAAI,EAAE,CAACC,OAAD,EAAUC,IAAV,KAAmBZ,6BAA6B,CAACU,IAA9B,CAAmCE,IAAnC;AAND,CAA1B;eASeX,iB","sourcesContent":["import { Operators, TokenTypes } from '../../constants'\n\nconst REGEX_OPERATOR_SEMICOLON_TEST = /^;/\n\nconst OperatorSemicolon = {\n  parse: () => ({\n    length: 1,\n    type: TokenTypes.OPERATOR_SEMICOLON,\n    value: Operators.SEMICOLON\n  }),\n  test: (context, data) => REGEX_OPERATOR_SEMICOLON_TEST.test(data)\n}\n\nexport default OperatorSemicolon\n"],"file":"OperatorSemicolon.js"}