{"version":3,"sources":["../../../src/parser/tokens/String.js"],"names":["REGEX_STRING_TEST","REGEX_STRING_TOKEN","String","parse","context","data","match","length","type","STRING","value","test"],"mappings":";;;;;;;;;AAAA;;AAEA,MAAMA,iBAAiB,GAAG,OAA1B;AACA,MAAMC,kBAAkB,GAAG,0CAA3B;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAE,CAACC,OAAD,EAAUC,IAAV,KAAmB;AACxB,UAAM,CAACC,KAAD,IAAUD,IAAI,CAACC,KAAL,CAAWL,kBAAX,CAAhB;AACA,WAAO;AACLM,MAAAA,MAAM,EAAED,KAAK,CAACC,MADT;AAELC,MAAAA,IAAI,EAAEC,kBAFD;AAGLC,MAAAA,KAAK,EAAEJ;AAHF,KAAP;AAKD,GARY;AASbK,EAAAA,IAAI,EAAE,CAACP,OAAD,EAAUC,IAAV,KAAmBL,iBAAiB,CAACW,IAAlB,CAAuBN,IAAvB;AATZ,CAAf;eAYeH,M","sourcesContent":["import { STRING } from '../../constants/TokenTypes'\n\nconst REGEX_STRING_TEST = /^['\"]/\nconst REGEX_STRING_TOKEN = /^(\"(?:[^\"\\\\]|\\\\.)*\")|('(?:[^'\\\\]|\\\\.)*')/\n\nconst String = {\n  parse: (context, data) => {\n    const [match] = data.match(REGEX_STRING_TOKEN)\n    return {\n      length: match.length,\n      type: STRING,\n      value: match\n    }\n  },\n  test: (context, data) => REGEX_STRING_TEST.test(data)\n}\n\nexport default String\n"],"file":"String.js"}