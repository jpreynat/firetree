{"version":3,"sources":["../../../src/parser/tokens/OperatorDollarSign.js"],"names":["REGEX_OPERATOR_DOLLAR_SIGN_TEST","OperatorDollarSign","parse","length","type","TokenTypes","OPERATOR_DOLLAR_SIGN","value","Operators","DOLLAR_SIGN","test","context","data"],"mappings":";;;;;;;AAAA;;AAEA,MAAMA,+BAA+B,GAAG,KAAxC;AAEA,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA,KAAK,EAAE,OAAO;AACZC,IAAAA,MAAM,EAAE,CADI;AAEZC,IAAAA,IAAI,EAAEC,sBAAWC,oBAFL;AAGZC,IAAAA,KAAK,EAAEC,qBAAUC;AAHL,GAAP,CADkB;AAMzBC,EAAAA,IAAI,EAAE,CAACC,OAAD,EAAUC,IAAV,KAAmBZ,+BAA+B,CAACU,IAAhC,CAAqCE,IAArC;AANA,CAA3B;eASeX,kB","sourcesContent":["import { Operators, TokenTypes } from '../../constants'\n\nconst REGEX_OPERATOR_DOLLAR_SIGN_TEST = /^\\$/\n\nconst OperatorDollarSign = {\n  parse: () => ({\n    length: 1,\n    type: TokenTypes.OPERATOR_DOLLAR_SIGN,\n    value: Operators.DOLLAR_SIGN\n  }),\n  test: (context, data) => REGEX_OPERATOR_DOLLAR_SIGN_TEST.test(data)\n}\n\nexport default OperatorDollarSign\n"],"file":"OperatorDollarSign.js"}