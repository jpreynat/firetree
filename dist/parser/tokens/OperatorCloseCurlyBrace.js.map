{"version":3,"sources":["../../../src/parser/tokens/OperatorCloseCurlyBrace.js"],"names":["REGEX_OPERATOR_CLOSE_CURLY_BRACE_TEST","OperatorCloseCurlyBrace","parse","length","type","TokenTypes","OPERATOR_CLOSE_CURLY_BRACE","value","Operators","CLOSE_CURLY_BRACE","test","context","data"],"mappings":";;;;;;;AAAA;;AAEA,MAAMA,qCAAqC,GAAG,IAA9C;AAEA,MAAMC,uBAAuB,GAAG;AAC9BC,EAAAA,KAAK,EAAE,OAAO;AACZC,IAAAA,MAAM,EAAE,CADI;AAEZC,IAAAA,IAAI,EAAEC,sBAAWC,0BAFL;AAGZC,IAAAA,KAAK,EAAEC,qBAAUC;AAHL,GAAP,CADuB;AAM9BC,EAAAA,IAAI,EAAE,CAACC,OAAD,EAAUC,IAAV,KAAmBZ,qCAAqC,CAACU,IAAtC,CAA2CE,IAA3C;AANK,CAAhC;eASeX,uB","sourcesContent":["import { Operators, TokenTypes } from '../../constants'\n\nconst REGEX_OPERATOR_CLOSE_CURLY_BRACE_TEST = /^}/\n\nconst OperatorCloseCurlyBrace = {\n  parse: () => ({\n    length: 1,\n    type: TokenTypes.OPERATOR_CLOSE_CURLY_BRACE,\n    value: Operators.CLOSE_CURLY_BRACE\n  }),\n  test: (context, data) => REGEX_OPERATOR_CLOSE_CURLY_BRACE_TEST.test(data)\n}\n\nexport default OperatorCloseCurlyBrace\n"],"file":"OperatorCloseCurlyBrace.js"}