{"version":3,"sources":["../../../src/parser/tokens/OperatorGreaterThanEqual.js"],"names":["REGEX_OPERATOR_GREATER_THAN_EQUAL_TEST","OperatorGreaterThanEqual","parse","length","type","TokenTypes","OPERATOR_GREATER_THAN_EQUAL","value","Operators","GREATER_THAN_EQUAL","test","context","data"],"mappings":";;;;;;;AAAA;;AAEA,MAAMA,sCAAsC,GAAG,KAA/C;AAEA,MAAMC,wBAAwB,GAAG;AAC/BC,EAAAA,KAAK,EAAE,OAAO;AACZC,IAAAA,MAAM,EAAE,CADI;AAEZC,IAAAA,IAAI,EAAEC,sBAAWC,2BAFL;AAGZC,IAAAA,KAAK,EAAEC,qBAAUC;AAHL,GAAP,CADwB;AAM/BC,EAAAA,IAAI,EAAE,CAACC,OAAD,EAAUC,IAAV,KAAmBZ,sCAAsC,CAACU,IAAvC,CAA4CE,IAA5C;AANM,CAAjC;eASeX,wB","sourcesContent":["import { Operators, TokenTypes } from '../../constants'\n\nconst REGEX_OPERATOR_GREATER_THAN_EQUAL_TEST = /^>=/\n\nconst OperatorGreaterThanEqual = {\n  parse: () => ({\n    length: 2,\n    type: TokenTypes.OPERATOR_GREATER_THAN_EQUAL,\n    value: Operators.GREATER_THAN_EQUAL\n  }),\n  test: (context, data) => REGEX_OPERATOR_GREATER_THAN_EQUAL_TEST.test(data)\n}\n\nexport default OperatorGreaterThanEqual\n"],"file":"OperatorGreaterThanEqual.js"}