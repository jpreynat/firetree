{"version":3,"sources":["../../../src/parser/tokens/OperatorGreaterThan.js"],"names":["REGEX_OPERATOR_GREATER_THAN_TEST","OperatorGreaterThan","parse","length","type","TokenTypes","OPERATOR_GREATER_THAN","value","Operators","GREATER_THAN","test","context","data"],"mappings":";;;;;;;AAAA;;AAEA,MAAMA,gCAAgC,GAAG,YAAzC;AAEA,MAAMC,mBAAmB,GAAG;AAC1BC,EAAAA,KAAK,EAAE,OAAO;AACZC,IAAAA,MAAM,EAAE,CADI;AAEZC,IAAAA,IAAI,EAAEC,sBAAWC,qBAFL;AAGZC,IAAAA,KAAK,EAAEC,qBAAUC;AAHL,GAAP,CADmB;AAM1BC,EAAAA,IAAI,EAAE,CAACC,OAAD,EAAUC,IAAV,KAAmBZ,gCAAgC,CAACU,IAAjC,CAAsCE,IAAtC;AANC,CAA5B;eASeX,mB","sourcesContent":["import { Operators, TokenTypes } from '../../constants'\n\nconst REGEX_OPERATOR_GREATER_THAN_TEST = /^>([^=]|$)/\n\nconst OperatorGreaterThan = {\n  parse: () => ({\n    length: 1,\n    type: TokenTypes.OPERATOR_GREATER_THAN,\n    value: Operators.GREATER_THAN\n  }),\n  test: (context, data) => REGEX_OPERATOR_GREATER_THAN_TEST.test(data)\n}\n\nexport default OperatorGreaterThan\n"],"file":"OperatorGreaterThan.js"}