{"version":3,"sources":["../../../src/parser/tokens/KeywordReturn.js"],"names":["REGEX_KEYWORD_RETURN_TEST","RegExp","Keywords","RETURN","KeywordReturn","parse","length","type","TokenTypes","KEYWORD_RETURN","value","test","context","data"],"mappings":";;;;;;;AAAA;;AAEA,MAAMA,yBAAyB,GAAG,IAAIC,MAAJ,CAAY,IAAGC,oBAASC,MAAO,mBAA/B,CAAlC;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE,OAAO;AACZC,IAAAA,MAAM,EAAEJ,oBAASC,MAAT,CAAgBG,MADZ;AAEZC,IAAAA,IAAI,EAAEC,sBAAWC,cAFL;AAGZC,IAAAA,KAAK,EAAER,oBAASC;AAHJ,GAAP,CADa;AAMpBQ,EAAAA,IAAI,EAAE,CAACC,OAAD,EAAUC,IAAV,KAAmBb,yBAAyB,CAACW,IAA1B,CAA+BE,IAA/B;AANL,CAAtB;eASeT,a","sourcesContent":["import { Keywords, TokenTypes } from '../../constants'\n\nconst REGEX_KEYWORD_RETURN_TEST = new RegExp(`^${Keywords.RETURN}([^a-zA-Z0-9_]|$)`)\n\nconst KeywordReturn = {\n  parse: () => ({\n    length: Keywords.RETURN.length,\n    type: TokenTypes.KEYWORD_RETURN,\n    value: Keywords.RETURN\n  }),\n  test: (context, data) => REGEX_KEYWORD_RETURN_TEST.test(data)\n}\n\nexport default KeywordReturn\n"],"file":"KeywordReturn.js"}