{"version":3,"sources":["../../../src/parser/nodes/Whitespace.js"],"names":["Whitespace","identify","context","node","is","value","type","NodeTypes","WHITESPACE","parse","tokenList","nextToken","get","Error","test","TokenTypes"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;AAEA,MAAMA,UAAU,GAAG;AACjBC,EAAAA,QAAQ,EAAE,CAACC,OAAD,EAAUC,IAAV,KAAmBA,IADZ;AAEjBC,EAAAA,EAAE,EAAGC,KAAD,IAAWA,KAAK,IAAIA,KAAK,CAACC,IAAN,KAAeC,qBAAUC,UAFhC;AAGjBC,EAAAA,KAAK,EAAE,CAACP,OAAD,EAAUQ,SAAV,KAAwB;AAC7B,UAAMC,SAAS,GAAGD,SAAS,CAACE,GAAV,CAAc,CAAd,CAAlB;;AACA,QAAI,CAACD,SAAL,EAAgB;AACd,YAAM,IAAIE,KAAJ,CAAW,4DAAX,CAAN;AACD;;AACD,WAAO,+BAAiB;AACtBH,MAAAA,SAAS,EAAE,kBAAM,CAAN,EAAS,CAAT,EAAYA,SAAZ;AADW,KAAjB,CAAP;AAGD,GAXgB;AAYjBI,EAAAA,IAAI,EAAE,CAACZ,OAAD,EAAUQ,SAAV,KAAwBA,SAAS,CAACE,GAAV,CAAc,CAAd,EAAiBN,IAAjB,KAA0BS,sBAAWP;AAZlD,CAAnB;eAeeR,U","sourcesContent":["import { slice } from 'ramda'\n\nimport { NodeTypes, TokenTypes } from '../../constants'\nimport createWhitespace from '../pipes/createWhitespace'\n\nconst Whitespace = {\n  identify: (context, node) => node,\n  is: (value) => value && value.type === NodeTypes.WHITESPACE,\n  parse: (context, tokenList) => {\n    const nextToken = tokenList.get(0)\n    if (!nextToken) {\n      throw new Error(`Expected whitespace . Instead reached the end of the file.`)\n    }\n    return createWhitespace({\n      tokenList: slice(0, 1, tokenList)\n    })\n  },\n  test: (context, tokenList) => tokenList.get(0).type === TokenTypes.WHITESPACE\n}\n\nexport default Whitespace\n"],"file":"Whitespace.js"}