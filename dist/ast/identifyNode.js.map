{"version":3,"sources":["../../src/ast/identifyNode.js"],"names":["identifyNode","context","node","identifier","Identifiers","Error","JSON","stringify","identify"],"mappings":";;;;;;;AAAA;;AAEA;;;;AAEA,MAAMA,YAAY,GAAG,kBAAM,CAACC,OAAD,EAAUC,IAAV,KAAmB;AAC5C,QAAMC,UAAU,GAAG,6BAAeF,OAAO,CAACG,WAAvB,EAAoCF,IAApC,CAAnB;;AACA,MAAI,CAACC,UAAL,EAAiB;AACf,UAAM,IAAIE,KAAJ,CAAW,iCAAgCC,IAAI,CAACC,SAAL,CAAeL,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAA8B,EAAzE,CAAN;AACD;;AACD,SAAOC,UAAU,CAACK,QAAX,CAAoBP,OAApB,EAA6BC,IAA7B,CAAP;AACD,CANoB,CAArB;eAQeF,Y","sourcesContent":["import { curry } from 'ramda'\n\nimport findIdentifier from './findIdentifier'\n\nconst identifyNode = curry((context, node) => {\n  const identifier = findIdentifier(context.Identifiers, node)\n  if (!identifier) {\n    throw new Error(`Could not find Identifier for ${JSON.stringify(node, null, 2)}`)\n  }\n  return identifier.identify(context, node)\n})\n\nexport default identifyNode\n"],"file":"identifyNode.js"}