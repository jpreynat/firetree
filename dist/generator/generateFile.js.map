{"version":3,"sources":["../../src/generator/generateFile.js"],"names":["generateFile","context","ast","outputFilePath","tokenList","fileStream","forEach","token","write","Promise","resolve","reject","end","on"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEA;;;;AAEA,MAAMA,YAAY,GAAG,OAAOC,OAAP,EAAgB;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,cAAP;AAAuBC,EAAAA;AAAvB,CAAhB,KAAuD;AAC1E,MAAIF,GAAJ,EAAS;AACPE,IAAAA,SAAS,GAAG,gCAAkBH,OAAlB,EAA2B;AAAEC,MAAAA;AAAF,KAA3B,CAAZ;AACD;;AACD,QAAM,yBAAWC,cAAX,CAAN;AACA,QAAME,UAAU,GAAG,gCAAkBF,cAAlB,CAAnB;AACAC,EAAAA,SAAS,CAACE,OAAV,CAAmBC,KAAD,IAAW;AAC3BF,IAAAA,UAAU,CAACG,KAAX,CAAiB,4BAAcD,KAAd,CAAjB;AACD,GAFD;AAGA,SAAO,IAAIE,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCN,IAAAA,UAAU,CAACO,GAAX,CAAeF,OAAf;AACAL,IAAAA,UAAU,CAACQ,EAAX,CAAc,OAAd,EAAuBF,MAAvB;AACD,GAHM,CAAP;AAID,CAbD;;eAeeX,Y","sourcesContent":["import { createWriteStream, ensureFile } from 'fs-extra'\n\nimport tokenToString from '../token/tokenToString'\n\nimport generateTokenList from './generateTokenList'\n\nconst generateFile = async (context, { ast, outputFilePath, tokenList }) => {\n  if (ast) {\n    tokenList = generateTokenList(context, { ast })\n  }\n  await ensureFile(outputFilePath)\n  const fileStream = createWriteStream(outputFilePath)\n  tokenList.forEach((token) => {\n    fileStream.write(tokenToString(token))\n  })\n  return new Promise((resolve, reject) => {\n    fileStream.end(resolve)\n    fileStream.on('error', reject)\n  })\n}\n\nexport default generateFile\n"],"file":"generateFile.js"}