"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WORD = exports.WHITESPACE = exports.UNARY_EXPRESSION = exports.STATIC_MEMBER_EXPRESSION = exports.SERVICE_STATEMENT = exports.RETURN_STATEMENT = exports.RANGE = exports.PROGRAM = exports.PATH_PART_WORD = exports.PATH_PART_VARIABLE = exports.PATH_PART_EXPRESSION = exports.PATH_EXPRESSION = exports.PARENTHESES_EXPRESSION = exports.OPERATOR = exports.MATCH_STATEMENT = exports.MAP_EXPRESSION = exports.LITERAL = exports.LIST_EXPRESSION = exports.LET_DECLARATION = exports.KEYWORD = exports.IF_STATEMENT = exports.IDENTIFIER = exports.FUNCTION_DECLARATION = exports.EXPRESSION_STATEMENT = exports.ENTRY = exports.CONDITIONAL_EXPRESSION = exports.COMPUTED_MEMBER_EXPRESSION = exports.COMMENT = exports.CALL_EXPRESSION = exports.BLOCK_STATEMENT = exports.BINARY_EXPRESSION = exports.ASSIGNMENT_EXPRESSION = exports.ALLOW_STATEMENT = void 0;
const ALLOW_STATEMENT = 'AllowStatement';
exports.ALLOW_STATEMENT = ALLOW_STATEMENT;
const ASSIGNMENT_EXPRESSION = 'AssignmentExpression';
exports.ASSIGNMENT_EXPRESSION = ASSIGNMENT_EXPRESSION;
const BINARY_EXPRESSION = 'BinaryExpression';
exports.BINARY_EXPRESSION = BINARY_EXPRESSION;
const BLOCK_STATEMENT = 'BlockStatement';
exports.BLOCK_STATEMENT = BLOCK_STATEMENT;
const CALL_EXPRESSION = 'CallExpression';
exports.CALL_EXPRESSION = CALL_EXPRESSION;
const COMMENT = 'Comment';
exports.COMMENT = COMMENT;
const COMPUTED_MEMBER_EXPRESSION = 'ComputedMemberExpression';
exports.COMPUTED_MEMBER_EXPRESSION = COMPUTED_MEMBER_EXPRESSION;
const CONDITIONAL_EXPRESSION = 'ConditionalExpression';
exports.CONDITIONAL_EXPRESSION = CONDITIONAL_EXPRESSION;
const ENTRY = 'Entry';
exports.ENTRY = ENTRY;
const EXPRESSION_STATEMENT = 'ExpressionStatement';
exports.EXPRESSION_STATEMENT = EXPRESSION_STATEMENT;
const FUNCTION_DECLARATION = 'FunctionDeclaration';
exports.FUNCTION_DECLARATION = FUNCTION_DECLARATION;
const IDENTIFIER = 'Identifier';
exports.IDENTIFIER = IDENTIFIER;
const IF_STATEMENT = 'IfStatement';
exports.IF_STATEMENT = IF_STATEMENT;
const KEYWORD = 'Keyword';
exports.KEYWORD = KEYWORD;
const LET_DECLARATION = 'LetDeclaration';
exports.LET_DECLARATION = LET_DECLARATION;
const LIST_EXPRESSION = 'ListExpression';
exports.LIST_EXPRESSION = LIST_EXPRESSION;
const LITERAL = 'Literal';
exports.LITERAL = LITERAL;
const MAP_EXPRESSION = 'MapExpression';
exports.MAP_EXPRESSION = MAP_EXPRESSION;
const MATCH_STATEMENT = 'MatchStatement';
exports.MATCH_STATEMENT = MATCH_STATEMENT;
const OPERATOR = 'Operator';
exports.OPERATOR = OPERATOR;
const PARENTHESES_EXPRESSION = 'ParenthesesExpression';
exports.PARENTHESES_EXPRESSION = PARENTHESES_EXPRESSION;
const PATH_EXPRESSION = 'PathExpression';
exports.PATH_EXPRESSION = PATH_EXPRESSION;
const PATH_PART_EXPRESSION = 'PathPartExpression';
exports.PATH_PART_EXPRESSION = PATH_PART_EXPRESSION;
const PATH_PART_VARIABLE = 'PathPartVariable';
exports.PATH_PART_VARIABLE = PATH_PART_VARIABLE;
const PATH_PART_WORD = 'PathPartWord';
exports.PATH_PART_WORD = PATH_PART_WORD;
const PROGRAM = 'Program';
exports.PROGRAM = PROGRAM;
const RANGE = 'Range';
exports.RANGE = RANGE;
const RETURN_STATEMENT = 'ReturnStatement';
exports.RETURN_STATEMENT = RETURN_STATEMENT;
const SERVICE_STATEMENT = 'ServiceStatement';
exports.SERVICE_STATEMENT = SERVICE_STATEMENT;
const STATIC_MEMBER_EXPRESSION = 'StaticMemberExpression';
exports.STATIC_MEMBER_EXPRESSION = STATIC_MEMBER_EXPRESSION;
const UNARY_EXPRESSION = 'UnaryExpression';
exports.UNARY_EXPRESSION = UNARY_EXPRESSION;
const WHITESPACE = 'Whitespace';
exports.WHITESPACE = WHITESPACE;
const WORD = 'Word';
exports.WORD = WORD;
//# sourceMappingURL=NodeTypes.js.map